////////////////////////////////////////////////////////////////////
// Copyright (c) 2021 - 2023 SparseLinearAlgebra
// Autogenerated file, do not modify
////////////////////////////////////////////////////////////////////

#pragma once

static const char source_vector_eadd[] = R"(


__kernel void dense_to_dense(__global TYPE*       g_rx,
                             __global const TYPE* g_ux,
                             __global const TYPE* g_vx,
                             const uint           n) {
    const uint gid   = get_global_id(0);
    const uint gsize = get_global_size(0);

    for (uint i = gid; i < n; i += gsize) {
        g_rx[i] = OP_BINARY(g_ux[i], g_vx[i]);
    }
}
)";